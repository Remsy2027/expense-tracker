/* Clean Apple-inspired Animations */

/* Apple's clean easing functions */
:root {
  --ease-out: cubic-bezier(0, 0, 0.2, 1);
  --ease-in: cubic-bezier(0.4, 0, 1, 1);
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-spring: cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Clean Keyframe Definitions */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-8px);
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(16px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-16px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-16px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(16px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Clean Animation Utility Classes */
.animate-fade-in {
  animation: fadeIn 0.3s var(--ease-out) both;
}

.animate-fade-out {
  animation: fadeOut 0.2s var(--ease-in) both;
}

.animate-slide-in-up {
  animation: slideInUp 0.4s var(--ease-out) both;
}

.animate-slide-in-down {
  animation: slideInDown 0.4s var(--ease-out) both;
}

.animate-slide-in-left {
  animation: slideInLeft 0.4s var(--ease-out) both;
}

.animate-slide-in-right {
  animation: slideInRight 0.4s var(--ease-out) both;
}

.animate-scale-in {
  animation: scaleIn 0.3s var(--ease-out) both;
}

.animate-scale-out {
  animation: scaleOut 0.2s var(--ease-in) both;
}

.animate-pulse {
  animation: pulse 2s var(--ease-in-out) infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-shimmer {
  animation: shimmer 1.5s linear infinite;
  background: linear-gradient(90deg, 
    rgba(255, 255, 255, 0.1) 0%, 
    rgba(255, 255, 255, 0.3) 50%, 
    rgba(255, 255, 255, 0.1) 100%);
  background-size: 400% 100%;
}

/* Staggered Animations */
.animate-stagger > * {
  opacity: 0;
  animation: slideInUp 0.4s var(--ease-out) both;
}

.animate-stagger > *:nth-child(1) { animation-delay: 0.05s; }
.animate-stagger > *:nth-child(2) { animation-delay: 0.1s; }
.animate-stagger > *:nth-child(3) { animation-delay: 0.15s; }
.animate-stagger > *:nth-child(4) { animation-delay: 0.2s; }
.animate-stagger > *:nth-child(5) { animation-delay: 0.25s; }
.animate-stagger > *:nth-child(6) { animation-delay: 0.3s; }

/* Clean Hover Animations */
.hover-lift {
  transition: transform 0.2s var(--ease-out);
}

.hover-lift:hover {
  transform: translateY(-2px);
}

.hover-scale {
  transition: transform 0.2s var(--ease-out);
}

.hover-scale:hover {
  transform: scale(1.02);
}

.hover-glow {
  transition: box-shadow 0.3s var(--ease-out);
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(0, 122, 255, 0.3);
}

/* Loading Animations */
.loading-spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(0, 122, 255, 0.2);
  border-top: 2px solid #007AFF;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.loading-dots {
  display: inline-block;
}

.loading-dots::after {
  content: "";
  animation: loadingDots 1.4s infinite;
}

@keyframes loadingDots {
  0%, 20% { content: ""; }
  40% { content: "."; }
  60% { content: ".."; }
  80%, 100% { content: "..."; }
}

/* Clean Transition Utilities */
.transition-all {
  transition: all 0.2s var(--ease-out);
}

.transition-colors {
  transition: color 0.2s var(--ease-out), background-color 0.2s var(--ease-out);
}

.transition-transform {
  transition: transform 0.2s var(--ease-out);
}

.transition-opacity {
  transition: opacity 0.2s var(--ease-out);
}

.transition-shadow {
  transition: box-shadow 0.2s var(--ease-out);
}

/* Duration variants */
.transition-fast {
  transition-duration: 0.15s;
}

.transition-normal {
  transition-duration: 0.2s;
}

.transition-slow {
  transition-duration: 0.3s;
}

/* Easing variants */
.ease-linear {
  transition-timing-function: linear;
}

.ease-in {
  transition-timing-function: var(--ease-in);
}

.ease-out {
  transition-timing-function: var(--ease-out);
}

.ease-in-out {
  transition-timing-function: var(--ease-in-out);
}

.ease-spring {
  transition-timing-function: var(--ease-spring);
}

/* Scroll-triggered animations */
.scroll-fade-in {
  opacity: 0;
  transform: translateY(16px);
  transition: all 0.5s var(--ease-out);
}

.scroll-fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }

  .scroll-fade-in {
    opacity: 1 !important;
    transform: none !important;
  }
}

/* Performance optimizations */
.animate-fade-in,
.animate-slide-in-up,
.animate-slide-in-down,
.animate-slide-in-left,
.animate-slide-in-right,
.animate-scale-in,
.hover-lift,
.hover-scale {
  will-change: transform, opacity;
  backface-visibility: hidden;
}

/* Remove will-change after animation */
.animate-fade-in:not(:hover),
.animate-slide-in-up:not(:hover),
.animate-slide-in-down:not(:hover),
.animate-slide-in-left:not(:hover),
.animate-slide-in-right:not(:hover),
.animate-scale-in:not(:hover) {
  will-change: auto;
}